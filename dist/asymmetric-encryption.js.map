{"version":3,"file":"asymmetric-encryption.js","sourceRoot":"","sources":["../src/asymmetric-encryption.ts"],"names":[],"mappings":";;AAAA,uCAAoC;AAGpC,SAAS;AACT;IAEI,gBAAwB,CAAC;IAGlB,MAAM,CAAC,eAAe;QAEzB,MAAM,CAAC,iBAAO,CAAC,cAAc,CAAC,sCAAsC,CAAC,CAAC;IAC1E,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,OAAe;QAEtC,MAAM,CAAC,iBAAO,CAAC,cAAc,CAAC,mCAAmC,EAAE,OAAO,CAAC,CAAC;IAChF,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,GAAW,EAAE,KAAa;QAE5C,MAAM,CAAC,iBAAO,CAAC,cAAc,CAAC,8BAA8B,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IAC9E,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,GAAW,EAAE,KAAa;QAE5C,MAAM,CAAC,iBAAO,CAAC,cAAc,CAAC,8BAA8B,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IAC9E,CAAC;CACJ;AAxBD,oDAwBC","sourcesContent":["import { Interop } from \"./interop\";\n\n\n// public\nexport class AsymmetricEncryption\n{\n    private constructor() { }\n    \n    \n    public static generateKeyPair(): Promise<string>\n    {\n        return Interop.executeCommand(\"AsymmetricEncryption.GenerateKeyPair\");\n    }\n    \n    public static getPublicKey(keyPair: string): Promise<string>\n    {\n        return Interop.executeCommand(\"AsymmetricEncryption.GetPublicKey\", keyPair);\n    }\n    \n    public static encrypt(key: string, value: string): Promise<string>\n    {\n        return Interop.executeCommand(\"AsymmetricEncryption.Encrypt\", key, value);\n    }\n    \n    public static decrypt(key: string, value: string): Promise<string>\n    {\n        return Interop.executeCommand(\"AsymmetricEncryption.Decrypt\", key, value);\n    }\n}"]}